{"version":3,"sources":["Chat/BaseClass.js","Chat/Item.js","Chat/List.js","Chat/Message.js","Chat/MessageList.js","Chat/Room.js","Chat/Admin.js","functions.js","index.js"],"names":["ChatBaseClass","cssSelector","_data","_cssSelector","_assignDom","dom","console","warn","_createData","header","Object","keys","map","key","JSON","stringify","join","content","values","value","toCsv","all","constructor","name","document","querySelector","method","splittedKey","split","query","reduce","queryObj","_cssQuery","Array","isArray","Error","ChatListItem","id","title","imageSrc","description","latestTime","isSelected","isActive","dataset","chatid","_query","textContent","src","parentElement","classList","contains","click","scrollIntoView","behavior","getId","_update","getTitle","getImageSrc","getDescription","getLatestTime","getIsSelected","getIsActive","ChatList","domsLimit","items","selectedItem","doms","where","filter","_getFindFilter","item","cachedDoms","_cache","length","slice","ChatItem","args","_getWhereFilter","arg","callback","wait","time","setTimeout","getItems","getSelectedItem","keyword","prop","RegExp","test","toLowerCase","includes","ChatMessage","localId","contentType","issuerType","isRead","sentAt","issuer","type","find","substring","innerHTML","date","Date","_getDateTimestamp","dateString","getFullYear","getMonth","getDate","timeString","dateTimeString","dateTimestamp","parse","data","getLocalId","getContentType","getContent","getSentAt","getIssuerType","getIssuer","getIsRead","prevDom","previousElementSibling","parseInt","text","image","sticker","admin","customer","own","ChatMessageList","messages","participatedAdmins","conversationTurns","hasPreviousMessages","turns","prev","current","admins","msgs","push","index","getMessages","getConversationTurns","getParticipatedAdmins","getHasPreviousMessages","prevMessageButton","notices","dates","ChatRoom","isFriend","messageList","TypeError","getIsFriend","editNameButton","input","ChatAdmin","list","room","message","sendMessage","rename","addFriend","filterAndClick","_addChatDependency","instance","className","cover","getChatList","getChatMessageList","getChatRoom","getChatAdmin","window"],"mappings":"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","file":"line-at-admin.map","sourceRoot":"../src","sourcesContent":["class ChatBaseClass {\n  static _cssQuery = {};\n  _cssSelector = null;\n  _data = {};\n\n  constructor(cssSelector) {\n    if (typeof cssSelector === \"string\") {\n      this._cssSelector = cssSelector;\n      this._assignDom();\n    } else {\n      this.dom = cssSelector;\n    }\n  }\n\n  refresh() {\n    if (!this._cssSelector) {\n      console.warn(\n        \"Could not refresh DOM: No CSS Selector given on instantiation.\"\n      );\n    } else {\n      this._assignDom();\n      this._createData();\n    }\n\n    return this;\n  }\n\n  toCsv() {\n    const header = Object.keys(this._data)\n      .map(key => JSON.stringify(key))\n      .join(\",\");\n    const content = Object.values(this._data)\n      .map(value => {\n        if (typeof value === \"undefined\" || value === null) {\n          return JSON.stringify(\"\");\n        }\n\n        return value.toCsv ? value.toCsv().content : JSON.stringify(value);\n      })\n      .join(\",\");\n\n    return {\n      header,\n      content,\n      all: header + \"\\n\" + content\n    };\n  }\n\n  toString() {\n    return `[object] [${this.constructor.name}]`;\n  }\n\n  toJSON = () => this._data;\n\n  /**\n   * A method for .refresh() to call to update all the object._data\n   */\n  _createData() {}\n\n  _assignDom() {\n    this.dom = document.querySelector(this._cssSelector);\n  }\n\n  _query(key, all = false) {\n    const method = all ? \"querySelectorAll\" : \"querySelector\";\n    // Parse dot notation e.g. 'key.subkey1.subkey2'\n    const splittedKey = key.split(\".\");\n    let query = splittedKey.reduce(\n      (queryObj, key) => queryObj[key],\n      this.constructor._cssQuery\n    );\n\n    query = Array.isArray(query) ? query.join(\" \") : query;\n\n    return this.dom[method](query);\n  }\n\n  _update(key, value) {\n    if (typeof this._data[key] === \"undefined\") {\n      throw new Error(\"Unknown data property: \" + key);\n    }\n\n    this._data[key] = value;\n  }\n}\n\nexport default ChatBaseClass;\n","import ChatBaseClass from \"./BaseClass\";\n\nclass ChatListItem extends ChatBaseClass {\n  static _cssQuery = {\n    title: \".mdCMN04Txt .mdCMN04Head .mdCMN04Ttl\",\n    description: \".mdCMN04Txt .mdCMN04Desc\",\n    latestTime: \".mdCMN04Opt .mdCMN04Date time\",\n    imageSrc: \".mdCMN04Img img\",\n    isActive: \".MdIcoBadge01:not(.MdNonDisp)\"\n  };\n\n  _data = {\n    id: null,\n    title: null,\n    imageSrc: null,\n    description: null,\n    latestTime: null,\n    isSelected: null,\n    isActive: null\n  };\n\n  constructor(dom) {\n    super(dom);\n    this._createData();\n  }\n\n  get id() {\n    return this._data.id;\n  }\n\n  get title() {\n    return this._data.title;\n  }\n  get imageSrc() {\n    return this._data.imageSrc;\n  }\n  get description() {\n    return this._data.description;\n  }\n  get latestTime() {\n    return this._data.latestTime;\n  }\n  get isSelected() {\n    return this._data.isSelected;\n  }\n  get isActive() {\n    return this._data.isActive;\n  }\n\n  getId = () => this.dom.dataset.chatid;\n\n  getTitle = () => this._query(\"title\").textContent;\n\n  getImageSrc = () => this._query(\"imageSrc\").src;\n\n  getDescription = () => this._query(\"description\").textContent;\n\n  getLatestTime = () => this._query(\"latestTime\").textContent;\n\n  getIsSelected = () => this.dom.parentElement.classList.contains(\"ExSelected\");\n\n  getIsActive = () => !!this._query(\"isActive\");\n\n  click = () => this.dom.click();\n\n  scrollIntoView = () => this.dom.scrollIntoView({ behavior: \"smooth\" });\n\n  /**\n   * Custom refresh\n   */\n  refresh() {\n    this.dom = document.querySelector(\"[data-chatid=\" + this.getId() + \"]\");\n    this._createData();\n\n    return this;\n  }\n\n  _createData() {\n    this._update(\"id\", this.getId());\n    this._update(\"title\", this.getTitle());\n    this._update(\"imageSrc\", this.getImageSrc());\n    this._update(\"description\", this.getDescription());\n    this._update(\"latestTime\", this.getLatestTime());\n    this._update(\"isSelected\", this.getIsSelected());\n    this._update(\"isActive\", this.getIsActive());\n  }\n}\n\nexport default ChatListItem;\n","import ChatBaseClass from \"./BaseClass\";\nimport ChatItem from \"./Item\";\n\nclass ChatList extends ChatBaseClass {\n  static _cssQuery = {\n    items: \".MdCMN04Item\"\n  };\n\n  _data = {\n    items: [],\n    selectedItem: null\n  };\n\n  _cache = {\n    doms: []\n  };\n\n  constructor(cssSelector, domsLimit = 100) {\n    super(cssSelector);\n    this.domsLimit = domsLimit;\n    this._createData();\n  }\n\n  get items() {\n    return this._data.items;\n  }\n\n  get selectedItem() {\n    return this._data.selectedItem;\n  }\n\n  get activeItems() {\n    return this.where(\"isActive\", true);\n  }\n\n  get length() {\n    return this.items.length;\n  }\n\n  /**\n   * Get array of all ChatItems.\n   *\n   * @return {array} Array of all ChatItem.\n   */\n  getItems() {\n    const cachedDoms = this._cache.doms;\n    let doms;\n\n    if (cachedDoms.length > 0) {\n      doms = cachedDoms;\n    } else {\n      doms = this._query(\"items\", true);\n\n      this._cache.doms = doms;\n    }\n\n    return [...doms].slice(0, this.domsLimit).map(dom => new ChatItem(dom));\n  }\n\n  getSelectedItem = () => this.where(\"isSelected\", true)[0];\n\n  /**\n   * Find ChatItem using keyword to be matched with given ChatItem._data key\n   *\n   * @see ChatList._getFindFilter()\n   *\n   * @return {array} Array of filtered ChatItem\n   */\n  find = (...args) => this.filter(this._getFindFilter(...args));\n\n  /**\n   * Filter collection using the ._data property\n   *\n   * @return {array} Array of filtered collection.\n   */\n  where(...args) {\n    // If first argument is not an array\n    // there is only one where clause (filter)\n    if (!Array.isArray(args[0])) {\n      const [key, value] = args;\n\n      return this.filter(this._getWhereFilter(key, value));\n    }\n\n    // Support multiple where filters.\n    // Expecting each argument to be an array with length of 2\n    // which the first index is a key string and the last is\n    // a filter function or a value string to be matched.\n    return args.reduce((items, arg) => {\n      const [key, value] = arg;\n\n      return items.filter(this._getWhereFilter(key, value));\n    }, this.items);\n  }\n\n  _getWhereFilter = (key, value) =>\n    typeof value === \"function\"\n      ? item => value(item[key])\n      : item => item[key] === value;\n\n  /**\n   * Filter all ChatItem\n   *\n   * @param {function} filter Filter function.\n   *\n   * @return {array} Array of filtered items.\n   */\n  filter = filter => this.items.filter(filter);\n\n  /**\n   * Click ChatItem of given filter\n   *\n   * @param {function} filter Filter function.\n   * @param {function} callback Callback funtion to be called on clicking an item.\n   * @param {number} wait Number of milliseconds to wait before clicking next item.\n   *\n   * @return {number} Number of items to be clicked.\n   */\n  filterAndClick(filter, callback, wait = 500) {\n    const items = this.filter(filter);\n\n    items.reduce((time, item) => {\n      setTimeout(() => {\n        item.click();\n        callback(item);\n      }, time);\n\n      time += wait;\n\n      return time;\n    }, 0);\n\n    return items.length;\n  }\n\n  _createData() {\n    // Clear cache\n    this._cache.doms = [];\n    this._update(\"items\", this.getItems());\n    this._update(\"selectedItem\", this.getSelectedItem());\n  }\n\n  /**\n   * Get filter function for .find()\n   *\n   * @param {string} keyword Keyword to search the items.\n   * @param {string} prop this._data[prop].\n   *\n   * @return {function} Filter function.\n   */\n  _getFindFilter(keyword, prop = \"title\") {\n    if (keyword.constructor.name === RegExp.name) {\n      return item => keyword.test(item[prop]);\n    }\n\n    return item => item[prop].toLowerCase().includes(keyword.toLowerCase());\n  }\n}\n\nexport default ChatList;\n","import ChatBaseClass from \"./BaseClass\";\n\nclass ChatMessage extends ChatBaseClass {\n  static _cssQuery = {\n    content: \".mdRGT07Msg\",\n    contentType: {\n      text: [\".mdRGT07Text\", \".mdRGT07MsgTextInner\"],\n      image: [\".mdRGT07Image\", \"img\"],\n      sticker: [\".mdRGT07Sticker\", \"img\"]\n    },\n    issuerType: {\n      admin: \".mdRGT07Clerk\",\n      customer: \".mdRGT07Other\",\n      own: \".mdRGT07Own\"\n    },\n    isRead: \".mdRGT07Opt .mdRGT07Read:not(.MdNonDisp)\",\n    sentAt: \".mdRGT07Date time\",\n    issuer: \".mdRGT07Ttl\"\n  };\n\n  _data = {\n    localId: null,\n    contentType: null,\n    content: null,\n    issuerType: null,\n    isRead: null,\n    sentAt: null,\n    issuer: null\n  };\n\n  constructor(dom) {\n    super(dom);\n\n    this._createData();\n  }\n\n  get localId() {\n    return this._data.localId;\n  }\n\n  get contentType() {\n    return this._data.contentType;\n  }\n\n  get content() {\n    return this._data.content;\n  }\n\n  get sentAt() {\n    return this._data.sentAt;\n  }\n\n  get issuerType() {\n    return this._data.issuerType;\n  }\n\n  get issuer() {\n    return this._data.issuer;\n  }\n\n  get isRead() {\n    return this._data.isRead;\n  }\n\n  getLocalId = () => this.dom.dataset.localId;\n\n  getContentType() {\n    const { content, contentType } = this.constructor._cssQuery;\n    const { classList } = this.dom.querySelector(content);\n    const type = Object.keys(contentType).find(key =>\n      classList.contains(contentType[key][0].substring(1))\n    );\n\n    if (!type) {\n      throw new Error(\n        \"Could not detect message content type from given classes: \" +\n          classList.value\n      );\n    }\n\n    return type;\n  }\n\n  getContent() {\n    const { contentType } = this;\n    const dom = this._query(\"contentType.\" + contentType);\n\n    return contentType === \"text\" ? dom.innerHTML : dom.src;\n  }\n\n  getSentAt() {\n    const date = new Date(this._getDateTimestamp());\n    const dateString = [\n      date.getFullYear(),\n      date.getMonth() + 1,\n      date.getDate()\n    ].join(\"/\");\n    const timeString = this._query(\"sentAt\").textContent;\n\n    if (!/^\\d{1,2}:\\d{2} (AM|PM)$/g.test(timeString)) {\n      throw new Error(\n        \"Invalid timestring retrieved from \" +\n          this.constructor._cssQuery.sentAt +\n          \": \" +\n          timeString\n      );\n    }\n\n    const dateTimeString = [dateString, timeString].join(\" \");\n    const dateTimestamp = Date.parse(dateTimeString);\n\n    return dateTimestamp;\n  }\n\n  getIssuerType() {\n    const { classList } = this.dom;\n    const { issuerType } = this.constructor._cssQuery;\n\n    const data = Object.keys(issuerType).find(key =>\n      classList.contains(issuerType[key].substring(1))\n    );\n\n    return data;\n  }\n\n  getIsRead() {\n    if (this.issuerType === \"customer\") {\n      return null;\n    }\n\n    return this._query(\"isRead\") ? true : false;\n  }\n\n  getIssuer() {\n    const dom = this._query(\"issuer\");\n    let issuer;\n\n    if (dom) {\n      issuer = dom.textContent;\n    } else if (!dom && this.issuerType === \"own\") {\n      issuer = \"currentAdmin\";\n    } else {\n      console.warn(\n        \"Could not detect issuer using \" +\n          this.constructor._cssQuery.issuer +\n          \". This is technically impossible\"\n      );\n\n      issuer = null;\n    }\n\n    return issuer;\n  }\n\n  _createData() {\n    this._update(\"localId\", this.getLocalId());\n    this._update(\"contentType\", this.getContentType());\n    this._update(\"content\", this.getContent());\n    this._update(\"sentAt\", this.getSentAt());\n    this._update(\"issuerType\", this.getIssuerType());\n    this._update(\"issuer\", this.getIssuer());\n    this._update(\"isRead\", this.getIsRead());\n  }\n\n  _getDateTimestamp() {\n    let prevDom = this.dom.previousElementSibling;\n\n    while (true) {\n      let { localId } = prevDom.dataset;\n\n      if (prevDom.classList.contains(\"mdRGT10Date\") && localId) {\n        return parseInt(localId);\n      }\n\n      prevDom = prevDom.previousElementSibling;\n    }\n  }\n}\n\nexport default ChatMessage;\n","import ChatMessage from \"./Message\";\r\nimport ChatBaseClass from \"./BaseClass\";\r\n\r\nclass ChatMessageList extends ChatBaseClass {\r\n  static _cssQuery = {\r\n    messages: \".MdRGT07Cont\",\r\n    prevMessageButton: \"#_prev_msg_btn\",\r\n    notices: \".MdRGT10Notice\",\r\n    dates: \".MdRGT10Notice.mdRGT10Date time\"\r\n  };\r\n\r\n  _data = {\r\n    messages: [],\r\n    participatedAdmins: [],\r\n    conversationTurns: null,\r\n    hasPreviousMessages: null\r\n  };\r\n\r\n  constructor(cssSelector) {\r\n    super(cssSelector);\r\n    this._createData();\r\n  }\r\n\r\n  get messages() {\r\n    return this._data.messages;\r\n  }\r\n\r\n  get notices() {\r\n    return this._query(\"notices\", true);\r\n  }\r\n\r\n  get dates() {\r\n    return this._query(\"dates\", true);\r\n  }\r\n\r\n  get length() {\r\n    return this.messages.length;\r\n  }\r\n\r\n  get conversationTurns() {\r\n    return this._data.conversationTurns;\r\n  }\r\n\r\n  get participatedAdmins() {\r\n    return this._data.participatedAdmins;\r\n  }\r\n\r\n  get hasPreviousMessages() {\r\n    return this._data.hasPreviousMessages;\r\n  }\r\n\r\n  get firstMessage() {\r\n    return this.messages[0];\r\n  }\r\n\r\n  get lastMessage() {\r\n    return this.messages.slice(-1)[0];\r\n  }\r\n\r\n  getMessages = () =>\r\n    [...this._query(\"messages\", true)].map(dom => new ChatMessage(dom));\r\n\r\n  getConversationTurns() {\r\n    let turns = 0;\r\n\r\n    this.messages.reduce((prev, current) => {\r\n      // Count if current message issuer is not the same as previous message's\r\n      if (current.issuer !== prev.issuer) {\r\n        turns++;\r\n      }\r\n\r\n      return current;\r\n    });\r\n\r\n    return turns;\r\n  }\r\n\r\n  getParticipatedAdmins() {\r\n    const admins = [];\r\n    const msgs = this.where(\r\n      \"issuerType\",\r\n      type => type === \"admin\" || type === \"own\"\r\n    );\r\n\r\n    if (msgs.length === 1) {\r\n      admins.push(msgs[0].issuer);\r\n    } else {\r\n      msgs.reduce((prev, current, index) => {\r\n        const { issuer } = current;\r\n\r\n        if (\r\n          index === 1 ||\r\n          (issuer !== prev.issuer && !admins.includes(issuer))\r\n        ) {\r\n          admins.push(issuer);\r\n        }\r\n\r\n        return current;\r\n      });\r\n    }\r\n\r\n    return admins;\r\n  }\r\n\r\n  getHasPreviousMessages = () =>\r\n    !this._query(\"prevMessageButton\").classList.contains(\"MdNonDisp\");\r\n\r\n  /**\r\n   * Filter collection using the ._data property\r\n   *\r\n   * @return {array} Array of filtered collection.\r\n   */\r\n  where(...args) {\r\n    // If first argument is not an array\r\n    // It means that there is only one where clause (filter)\r\n    if (!Array.isArray(args[0])) {\r\n      const [key, value] = args;\r\n\r\n      return this.filter(this._getWhereFilter(key, value));\r\n    }\r\n\r\n    // Support multiple where filters.\r\n    // Expecting each argument to be an array with length of 2\r\n    // which the first index is a key string and the last is\r\n    // a filter function or a value string to be matched.\r\n    return args.reduce((messages, arg) => {\r\n      const [key, value] = arg;\r\n\r\n      return messages.filter(this._getWhereFilter(key, value));\r\n    }, this.messages);\r\n  }\r\n\r\n  _getWhereFilter = (key, value) =>\r\n    typeof value === \"function\"\r\n      ? item => value(item[key])\r\n      : item => item[key] === value;\r\n\r\n  /**\r\n   * Filter all ChatItem\r\n   *\r\n   * @param {function} filter Filter function.\r\n   *\r\n   * @return {array} Array of filtered items.\r\n   */\r\n  filter = filter => this.messages.filter(filter);\r\n\r\n  _createData() {\r\n    this._update(\"messages\", this.getMessages());\r\n    this._update(\"conversationTurns\", this.getConversationTurns());\r\n    this._update(\"participatedAdmins\", this.getParticipatedAdmins());\r\n    this._update(\"hasPreviousMessages\", this.getHasPreviousMessages());\r\n  }\r\n}\r\n\r\nexport default ChatMessageList;\r\n","import ChatBaseClass from \"./BaseClass\";\nimport ChatMessageList from \"./MessageList\";\n\nclass ChatRoom extends ChatBaseClass {\n  static _cssQuery = {\n    title: \"#_chat_header_area .mdRGT04Ttl\",\n    isFriend: \"#_chat_header_add_btn\",\n    header: \".MdRGT04Head.mdRGT04Link\",\n    editNameButton:\n      \"#_chat_detail_area #_chat_contact_detail_view button.MdBtn01Edit01\",\n    messageList: \"#_chat_room_msg_list\",\n    messages: \"#_chat_room_msg_list .MdRGT07Cont\",\n    input: \"#_chat_room_input\"\n  };\n\n  _data = {\n    title: null,\n    isFriend: null\n  };\n\n  constructor(cssSelector) {\n    super(cssSelector);\n    this.messageList = new ChatMessageList(\n      this.constructor._cssQuery.messageList\n    );\n    this._createData();\n  }\n\n  get title() {\n    return this._data.title;\n  }\n\n  get isFriend() {\n    return this._data.isFriend;\n  }\n\n  /**\n   * **********\n   * Get data\n   * **********\n   */\n  getTitle() {\n    const dom = this._query(\"title\");\n\n    return dom ? dom.textContent : null;\n  }\n\n  getIsFriend() {\n    const dom = this._query(\"isFriend\");\n\n    return dom ? false : true;\n  }\n\n  /**\n   * **********\n   * Interaction\n   * **********\n   */\n  addFriend() {\n    if (this.isFriend) {\n      console.warn(\"This friend has already been added\");\n      return;\n    }\n\n    this._query(\"isFriend\").click();\n  }\n\n  /**\n   * [PROPOSAL] Rename current customer.\n   *\n   * @param {string} name New name.\n   */\n  rename(name) {\n    this._query(\"header\").click();\n    setTimeout(() => this._query(\"editNameButton\").click(), 500);\n  }\n\n  /**\n   * [PROPOSAL] Send message to current chat.\n   *\n   * @param {string} text Text to be sent.\n   */\n  sendMessage(text) {\n    if (typeof text !== \"string\") {\n      throw new TypeError(\"Input value must be string\");\n    }\n\n    this._query(\"input\").innerHTML = text;\n  }\n\n  _createData() {\n    this._update(\"title\", this.getTitle());\n    this._update(\"isFriend\", this.getIsFriend());\n  }\n}\n\nexport default ChatRoom;\n","class ChatAdmin {\n  _currentCustomerData = null;\n\n  constructor({ list, room }) {\n    this._addChatDependency(\"list\", list, \"ChatList\");\n    this._addChatDependency(\"room\", room, \"ChatRoom\");\n  }\n\n  // get item() {\n  //   return this.list.refresh().selectedItem;\n  // }\n\n  // get chatData() {\n  //   const { item } = this;\n\n  //   if (!item) {\n  //     console.warn(\"Please select any chat item.\");\n\n  //     return null;\n  //   }\n\n  //   return item._data;\n  // }\n\n  get data() {\n    return {\n      cover: this.list.selectedItem._data,\n      room: this.room.messageList._data\n      // chat: {\n      //   id: chatData.id,\n      //   numMessages: roomData.messages.length,\n      //   numConvoTurns: roomData.conversationTurns,\n      //   numParticipatedAdmins: roomData.participatedAdmins.length\n      // }\n    };\n  }\n\n  sendMessage = message => this.room.sendMessage(message); // [PROPOSAL]\n\n  rename = name => this.room.rename(name); // [PROPOSAL]\n\n  addFriend = () => this.room.addFriend(); // [UNTESTED]\n\n  sendToMany = (message, filter, wait = 500) =>\n    this.list.filterAndClick(filter, () => this.sendMessage(message), wait);\n\n  _addChatDependency(key, instance, className) {\n    if (instance.constructor.name !== className) {\n      throw new TypeError(\n        \"Expected \" +\n          className +\n          \" but \" +\n          instance.constructor.name +\n          \" given.\"\n      );\n    }\n\n    this[key] = instance;\n  }\n}\n\nexport default ChatAdmin;\n","import ChatList from \"./Chat/List\";\nimport ChatRoom from \"./Chat/Room\";\nimport ChatAdmin from \"./Chat/Admin\";\nimport ChatMessageList from \"./Chat/MessageList\";\n\nconst getChatList = () => new ChatList(\"#_chat_list_body\");\nconst getChatMessageList = () => new ChatMessageList(\"#_chat_room_msg_list\");\nconst getChatRoom = () => new ChatRoom(\"#rightSide\");\nconst getChatAdmin = () =>\n  new ChatAdmin({ list: getChatList(), room: getChatRoom() });\n\nexport { getChatList, getChatRoom, getChatAdmin, getChatMessageList };\n","import { getChatAdmin } from \"./functions\";\r\n\r\nwindow.getChatAdmin = getChatAdmin;\r\n"]}